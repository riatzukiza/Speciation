
(macro struct (...body)
       `(new Andy.Gl.Type.Composite
             (lit ...@body)))
(def-interface Bucket (*limit ( limit (Math.pow 2 *limit )) (*array [])))
(def-interface Flexible-pool (bucket-size
                              (*buckets ((create Object-pool) 256 Bucket))
                              (*current (.init (.aquire *pool ) bucket-size))
                              (*sparse ((create Group)))
                              (*full ((create Group))))
  (def spawn ((dots args))
    (if (> this.*current.free 0)
        (.init (.aquire this.*current) (dots args))
        (> this.*buckets.free 0)
        (do (.add this.*full this.*current)
            (if (< this.*sparse.size 0)
                (assign this.*current (.pop this.*sparse ))
                (assign this.*current (.init (.aquire this.*pool) this.bucket-size)))
          (.spawn this (dots args)))

        (throw (new Range-error "flex pool maxed out."))))
  (def despawn ()))
(def-interface Structure-pool (*type (*members (*type.structure.Array limit)))

  (limit 256)

  (init
   (.call Pooled-system.init this
          limit
          *type
          ((create Object-pool) this.limit *type *members))))

(macro def-struct (name args ...body)
       )
