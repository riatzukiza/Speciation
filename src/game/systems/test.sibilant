(include "./lighting.sibilant")

(def spawn-vertex-layer ()
  (.spawn rendering 1000000 Vertex
          [ uniforms.res uniforms.scale]
          [(vert-shader) fragment-shader-string]))

(require! 'assert)

;; (var roads (.spawn Layer Road)
;;      ground (.spawn Layer Ground)
;;      water (.spawn Layer Water)
;;      plumbing (.spawn Layer Pipe)
;;      zones (.spawn Layer Zone)
;;      buildings (.spawn Layer Building)
;;      traffic (.spawn Layer Vehicle)
;;      citizen (.spawn Layer Citizen)
;;      build-ghost (.spawn Layer Ghost)



;;      )

;; (include "../lib/collection/graph")
;; (include "./roads.sibilant")

;; (let* (( lighting ((create Lighting)))

;;        ( t (.spawn lighting 500 500  50))
;;        ( r (.spawn lighting 500 400  50)))

;;   (pipe Ticker
;;         (.init 10)
;;         (.start)
;;         (.remove-all-listeners 'tick)
;;         (.on 'tick (->
;;                     (incr-by t.x 10)
;;                     (.update lighting)
;;                     (.update rendering)))))

(let ((r (.spawn ))))
