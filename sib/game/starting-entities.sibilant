
(def bulk-spawn-entity (T args)
  (each args (a) (.spawn T (dots a))))

;; (def clear-entities ()
;;   (each  (e) (.remove e)))

(def update-game (ticks)
  "Gets called every tick of the game, and for every system of the process,
we update its state, and recaculate the values of the current major field."

  (if (= Algae.system.*pool.used 0) (initialize-game))

  (var current-system (get systems (mod ticks systems.length) ))

  ;;(print "starting update" sim.elapsed ticks current-system)

  ;;(refresh-fields)

  ;;(update-off-beat-fields current-system ticks)

  (update-on-beat-field current-system ticks)

  (refresh-fields)

  ;;(update-entities)
  (.update Algae.system)

  (refresh-fields)

  ;; (display-stats Water )

  ;; (display-stats Light )

  ;; (display-stats Heat)

  ;; (display-stats Silt)


  (update-display ))




(def randomize-fields ()

  (each systems (s) (.randomize s)))
(randomize-fields)

(def initialize-game ()

  (.clear Algae.system)

  (each systems (s) (.randomize s))

  (bulk-spawn-entity Algae
                     [

                     [ 20 50 ]
                     [ 10 50 ]


                     ])  )

;;(print Algae.system)
(initialize-game)
